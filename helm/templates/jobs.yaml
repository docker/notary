{{- if (and (not .Values.storage.remote.enabled) (not (eq .Values.storage.flavor "memory"))) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: notary-server-migrate
  labels:
    app.kubernetes.io/name: notary
    app.kubernetes.io/component: notaryserver-migrate
spec:
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 300
  template:
    metadata:
        labels:
          app.kubernetes.io/name: notary
          app.kubernetes.io/component: notaryserver-migrate
    spec:
      containers:
      - command:
        - /migrate
        - -path=/migrations/server/{{ .Values.storage.flavor }}
        - -database={{ .Values.storage.flavor }}://{{ template "notary.serverdburl" . }}
        - up
        image: migrate/migrate:{{ .Values.storage.kubernetes.migrateVersion }}
        name: migrate
        volumeMounts:
        - mountPath: /migrations/server/{{ .Values.storage.flavor }}
          name: migrations-server
        - mountPath: /tls
          name: tls
          readOnly: true
      restartPolicy: OnFailure
      volumes:
      - configMap:
          name: notary-migrations-server
        name: migrations-server
      - secret:
          secretName: notary-tls
        name: tls

---

apiVersion: batch/v1
kind: Job
metadata:
  name: notary-signer-migrate
  labels:
    app.kubernetes.io/name: notary
    app.kubernetes.io/component: notarysigner-migrate
spec:
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 300
  template:
    metadata:
        labels:
          app.kubernetes.io/name: notary
          app.kubernetes.io/component: notarysigner-migrate
    spec:
      containers:
      - command:
        - /migrate
        - -path=/migrations/signer/{{ .Values.storage.flavor }}
        - -database={{ .Values.storage.flavor }}://{{ template "notary.signerdburl" . }}
        - up
        image: migrate/migrate:{{ .Values.storage.kubernetes.migrateVersion }}
        name: migrate
        volumeMounts:
        - mountPath: /migrations/signer/{{ .Values.storage.flavor }}
          name: migrations-signer
        - mountPath: /tls
          name: tls
          readOnly: true
      restartPolicy: OnFailure
      volumes:
      - configMap:
          name: notary-migrations-signer
        name: migrations-signer
      - secret:
          secretName: notary-tls
        name: tls

{{- end }}