syntax = "proto3";

package grpckeystore;

import "google/protobuf/Empty.proto";

service GRPCKeyStore {

    // NewKey allows they GRPC keystore to provide keypair
    // used for keystores that generate and never divulge private key
    rpc NewKey (NewKeyReq) returns (NewKeyRsp) {
    }

    // Add a key to the GRPC keystore
    // AddKey maps to KeyStore.AddKey()
    rpc AddKey (AddKeyReq) returns (AddKeyRsp) {
    }

    // Get a previously stored key from the GRPC keystore
    // GetKey maps to KeyStore.GetKey()
    rpc GetKey (GetKeyReq) returns (GetKeyRsp) {
    }

    // Get specific key information from the GRPC keystore
    // GetKeyInfo maps to KeyStore.GetKeyInfo()
    rpc GetKeyInfo (GetKeyInfoReq) returns (GetKeyInfoRsp) {
    }

    // List keys available in the GRPC keystore
    // ListKeys maps to KeyStore.ListKeys()
    rpc ListKeys (google.protobuf.Empty) returns (ListKeysRsp) {
    }

    // Remove a key from the keystore
    // RemoveKey maps to KeyStore.RemoveKey()
    rpc RemoveKey (RemoveKeyReq) returns (RemoveKeyRsp) {
    }

    // Sign a message with the specified key
    // Sign maps to PrivateKey.Sign()
    rpc Sign (SignReq) returns (SignRsp) {
    }
}


message NewKeyReq {
    string Gun = 1;          // see notary/tuf/data/types.go -> GUN type
    string Role = 2;         // see notary/tuf/data/types.go -> TUFTypes
    string Algorithm = 3;    // see notary/tuf/data/types.go -> Key types
    string SignatureAlgorithm = 4; // see notary/tuf/data/types.go -> Signature types
}

message NewKeyRsp {
    string KeyId = 1;       // for NewKey, KeyId is generated by remote store
    string PublicKey = 2;   // Public Key in PEM format, Private Key is never shared
    string DebugMsg = 3;    // Optional informational string returned from remote
}

message AddKeyReq {
    string KeyId = 1;
    string Gun = 2;
    string Role = 3;
    string Algorithm = 4;
    string SignatureAlgorithm = 5;
    string PublicKey = 6;
    string PrivateKey = 7;
}

message AddKeyRsp {
    string DebugMsg = 1;
}

message GetKeyReq {
    string KeyId = 1;
}

message GetKeyRsp {
    string Gun = 1;
    string Role = 2;
    string Algorithm = 3;
    string SignatureAlgorithm = 4;
    string PublicKey = 5;
    string DebugMsg = 6;
}

message GetKeyInfoReq {
    string KeyId = 1;
}

message GetKeyInfoRsp {
    string Gun = 1;
    string Role = 2;
    string DebugMsg = 3;
}

message ListKeysRsp {
    message KeyInfo {
        string KeyId = 1;
        string Gun = 2;
        string Role = 3;
    }
    repeated KeyInfo KeyData = 1;
    string DebugMsg = 2;

}

message RemoveKeyReq {
    string KeyId = 1;
}

message RemoveKeyRsp {
    string DebugMsg = 1;
}

message SignReq {
    string KeyId = 1;
    bytes Message = 2;
}

message SignRsp {
    string Signature = 1;
    string DebugMsg = 2;
}
